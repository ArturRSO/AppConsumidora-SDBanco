package appBanco;

import java.util.List;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.ERROR_MESSAGE;
import static javax.swing.JOptionPane.INFORMATION_MESSAGE;
import static javax.swing.JOptionPane.QUESTION_MESSAGE;
import static javax.swing.JOptionPane.WARNING_MESSAGE;
import static javax.swing.JOptionPane.YES_NO_OPTION;

/*
 * @author ArturRSO
 */
public class ConsumidoraConta extends javax.swing.JFrame {

    /**
     * Creates new form ConsumidoraConta
     */
    public ConsumidoraConta() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.JLabel lblDescNumConta = new javax.swing.JLabel();
        txtIdConta = new javax.swing.JTextField();
        lblDescSenha = new javax.swing.JLabel();
        btnConsultar = new javax.swing.JButton();
        lblDescNome = new javax.swing.JLabel();
        lblDescSaldo = new javax.swing.JLabel();
        lblNome = new javax.swing.JLabel();
        lblSaldo = new javax.swing.JLabel();
        txtSenha = new javax.swing.JPasswordField();
        txtValor = new javax.swing.JTextField();
        btnDepositar = new javax.swing.JButton();
        btnSacar = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        lblDescValor = new javax.swing.JLabel();
        btnFecharConta = new javax.swing.JButton();
        btnAbrirConta = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Gerenciar conta");

        lblDescNumConta.setText("Número da conta:");
        lblDescNumConta.setToolTipText("");

        txtIdConta.setToolTipText("Número da conta");

        lblDescSenha.setText("Senha:");

        btnConsultar.setText("Consultar");
        btnConsultar.setToolTipText("Recupera os dados da conta. Necessário digitar número da conta e senha.");
        btnConsultar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnConsultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultarActionPerformed(evt);
            }
        });

        lblDescNome.setText("Nome:");

        lblDescSaldo.setText("Saldo atual:");

        lblNome.setBackground(new java.awt.Color(255, 255, 255));
        lblNome.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.white, null));

        lblSaldo.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.white, null));

        txtSenha.setToolTipText("Só pode conter números.");

        txtValor.setToolTipText("Só pode conter números e pontos.");

        btnDepositar.setText("Depositar");
        btnDepositar.setToolTipText("Deposita o valor digitado no campo acima. Necesário também digitar número da conta e senha.");
        btnDepositar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnDepositar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDepositarActionPerformed(evt);
            }
        });

        btnSacar.setText("Sacar");
        btnSacar.setToolTipText("Retira o valor digitado no campo acima . Necessário também digitar número da conta e senha.");
        btnSacar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnSacar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSacarActionPerformed(evt);
            }
        });

        lblDescValor.setText("Valor:");

        btnFecharConta.setForeground(new java.awt.Color(255, 0, 0));
        btnFecharConta.setText("Fechar conta");
        btnFecharConta.setToolTipText("Encerra a conta. Necessário digitar número da conta e senha.");
        btnFecharConta.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnFecharConta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFecharContaActionPerformed(evt);
            }
        });

        btnAbrirConta.setText("Abrir conta");
        btnAbrirConta.setToolTipText("Abre um formulário para uma nova conta.");
        btnAbrirConta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAbrirContaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addGroup(layout.createSequentialGroup()
                .addGap(163, 163, 163)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(lblDescValor)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtValor, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(57, 57, 57))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnDepositar, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnSacar, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblDescNumConta)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtIdConta, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblDescSenha, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtSenha, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnConsultar, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnFecharConta)
                        .addGap(18, 18, 18)
                        .addComponent(btnAbrirConta))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(93, 93, 93)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblDescSaldo)
                            .addComponent(lblDescNome))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblSaldo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblNome, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(120, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDescNumConta)
                    .addComponent(txtIdConta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDescSenha)
                    .addComponent(txtSenha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblNome, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDescNome))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblDescSaldo)
                    .addComponent(lblSaldo, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnConsultar)
                    .addComponent(btnFecharConta)
                    .addComponent(btnAbrirConta))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtValor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDescValor))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSacar)
                    .addComponent(btnDepositar))
                .addContainerGap(67, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnConsultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultarActionPerformed

        lblNome.setText("");
        lblSaldo.setText("");

        try {
            ws.ServicoContaService servico = new ws.ServicoContaService();
            ws.ServicoConta webService = servico.getServicoConta();

            int id = Integer.parseInt(txtIdConta.getText());
            int senha = Integer.parseInt(new String(txtSenha.getPassword()));

            List<String> resultado = webService.consultarDadosConta(id, senha);

            if (!resultado.get(0).equals("")) {
                lblNome.setText(resultado.get(0));
                lblSaldo.setText(resultado.get(1));

            } else {
                JOptionPane.showMessageDialog(null, "Conta não encontrada!");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao recuperar conta!");

            System.out.println("Erro no botão consultar: " + e.getMessage());

        } finally {
            txtIdConta.setText("");
            txtSenha.setText("");
        }
    }//GEN-LAST:event_btnConsultarActionPerformed

    private void btnDepositarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDepositarActionPerformed

        lblNome.setText("");
        lblSaldo.setText("");

        try {
            ws.ServicoContaService servico = new ws.ServicoContaService();
            ws.ServicoConta webService = servico.getServicoConta();

            int id = Integer.parseInt(txtIdConta.getText());
            int senha = Integer.parseInt(new String(txtSenha.getPassword()));
            double valor = Double.parseDouble(txtValor.getText());
            
            if (valor <= 0){
                throw new InvalidValueException("Valor digitado igual ou menor a zero");
            }

            boolean resultado = webService.deposito(id, senha, valor);

            if (resultado) {
                JOptionPane.showMessageDialog(null, "Depósito efetuado!", "Sucesso", INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(null, "Operação não efetuada, dados digitados incorretos!", "Falha", WARNING_MESSAGE);
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao efetuar a operação, preencha os campos da conta, senha e valor corretamente!", "Erro", ERROR_MESSAGE);

            System.out.println("Erro no botão depositar: " + e.getMessage());
        } finally {
            txtIdConta.setText("");
            txtSenha.setText("");
            txtValor.setText("");
        }
    }//GEN-LAST:event_btnDepositarActionPerformed

    private void btnSacarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSacarActionPerformed

        lblNome.setText("");
        lblSaldo.setText("");

        try {
            ws.ServicoContaService servico = new ws.ServicoContaService();
            ws.ServicoConta webService = servico.getServicoConta();

            int id = Integer.parseInt(txtIdConta.getText());
            int senha = Integer.parseInt(new String(txtSenha.getPassword()));
            double valor = Double.parseDouble(txtValor.getText());
            
            if (valor <= 0){
                throw new InvalidValueException("Valor digitado menor ou igual a zero");
            }

            boolean resultado = webService.saque(id, senha, valor);

            if (resultado) {
                JOptionPane.showMessageDialog(null, "Saque efetuado!", "Sucesso", INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(null, "Operação não efetuada!\n Dados digitados incorretos, ou valor superior ao saldo!", "Falha", WARNING_MESSAGE);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao efetuar a operação!\n Preencha os campos número da conta, senha e valor corretamente!", "Erro", ERROR_MESSAGE);

            System.out.println("Erro no botão sacar: " + e.getMessage());

        } finally {
            txtIdConta.setText("");
            txtSenha.setText("");
            txtValor.setText("");
        }
    }//GEN-LAST:event_btnSacarActionPerformed

    private void btnFecharContaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFecharContaActionPerformed
        int opcao = JOptionPane.showConfirmDialog(null, "Tem certeza que deseja fechar a conta?\n Essa ação não pode ser desfeita.", "Fechar conta", YES_NO_OPTION, QUESTION_MESSAGE);
   
        if(opcao == 0){
            
            lblNome.setText("");
            lblSaldo.setText("");
            
            try{
                ws.ServicoContaService servico = new ws.ServicoContaService();
                ws.ServicoConta webService = servico.getServicoConta();
                
                int id = Integer.parseInt(txtIdConta.getText());
                int senha = Integer.parseInt(new String(txtSenha.getPassword()));
                
                boolean resultado = webService.fecharConta(id, senha);
                
                if(resultado){
                    JOptionPane.showMessageDialog(null, "Sua conta foi fechada.", "Operação finalizada", INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(null, "Falha ao fechar conta!\n Verifique os dados digitados ou se você ainda possui saldo.", "Falha", WARNING_MESSAGE);
                }
                
            } catch(Exception e) {
                JOptionPane.showMessageDialog(null, "Erro ao efetuar operação!\n Preencha os campos número da conta e senha corretamente!", "Erro", ERROR_MESSAGE);
                
                System.out.println("Erro no botão fechar conta: " + e.getMessage());
                
            } finally{
                txtIdConta.setText("");
                txtSenha.setText("");
            }
        }
    }//GEN-LAST:event_btnFecharContaActionPerformed

    private void btnAbrirContaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAbrirContaActionPerformed
        NovaConta novaConta = new NovaConta();
        novaConta.setVisible(true);
    }//GEN-LAST:event_btnAbrirContaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ConsumidoraConta.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ConsumidoraConta.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ConsumidoraConta.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ConsumidoraConta.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ConsumidoraConta().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAbrirConta;
    private javax.swing.JButton btnConsultar;
    private javax.swing.JButton btnDepositar;
    private javax.swing.JButton btnFecharConta;
    private javax.swing.JButton btnSacar;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lblDescNome;
    private javax.swing.JLabel lblDescSaldo;
    private javax.swing.JLabel lblDescSenha;
    private javax.swing.JLabel lblDescValor;
    private javax.swing.JLabel lblNome;
    private javax.swing.JLabel lblSaldo;
    private javax.swing.JTextField txtIdConta;
    private javax.swing.JPasswordField txtSenha;
    private javax.swing.JTextField txtValor;
    // End of variables declaration//GEN-END:variables
}
